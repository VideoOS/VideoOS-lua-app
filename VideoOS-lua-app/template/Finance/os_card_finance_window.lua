--
-- Created by IntelliJ IDEA.
-- User: videojj_pls
-- Date: 2018/11/6
-- Time: 10:22 AM
-- To change this template use File | Settings | File Templates.
--
require "os_config"
require "os_string"
require "os_constant"
require "os_util"
require "os_track"
cardWindow = object:new()
local adTypeName = "cardWindow"
local scale = getScale()
local OS_ICON_WEDGE_CLOSE = "iVBORw0KGgoAAAANSUhEUgAAAC0AAAAtCAYAAAA6GuKaAAAAAXNSR0IArs4c6QAAAAlwSFlzAAAhOAAAITgBRZYxYAAAABxpRE9UAAAAAgAAAAAAAAAXAAAAKAAAABcAAAAWAAABJuDZqwUAAADySURBVGgFxNYxDsIwDAXQDiwwcR1uwB1ghpUj5Oh8S3yE2rTYju1GsiIlqf3Swe009ccFyw/Esb+dsnpA1hvi6sku4PaJJ+YKOMGsa4L/gpkgGz4Hs64K3gMzQRZ8Dcy6m/AtMBNEw/+BWbcL14CZIAquBbPuAi5dgpuaeRQu4Lux5gvnT4jvkO4gkGYIL9z6hsUk4DNiMSrgoWDeIBOeAs6Ep4Iz4CXgSHgpOAK+C3gU7unD3bZGiHX2dJWGItpY7cNW6Px8FjwNzAtEw9PB0fAycBS8HDwK3w0scOnD1rbW8Iz37xCPjg3Ph6OhJGMY/gYAAP//68uhBAAAANxJREFU7dZNDoIwEAVgEl2gK4/lCdh4ALceoUf3DfEloIjTdt6sbDIpJHTeF34ahqFuHHH5DVU66471J5R8RIELpFZyeDRYDleBZfAW8OP16InyzGGvSiv4ArR9ZAbxgHlNN7wHDOs8UuER4FR4JDgFrgBL4UqwBJ4BDofX/kvYPmzbWuto3VXGZeAVJ8VZvWDm1sInLDxwMWcPPArMTC98E8wme/BoMDN/wXfBbLIFV4GZ+Q3uArPJEq4GM/MdXgVmE4NngZlJeBOYTc48SJxHZH3sEon5/6jVHXgCCd+jGkmWfYoAAAAASUVORK5CYII="
local OS_ICON_CARD_IMAGE_BG = "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"
local OS_ICON_CARD_NO_COLLECT = ""

local OS_CARD_LANDSCAPE_BG = ""
local OS_CARD_PORTRAIT_BG = "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"

local OS_CARD_PORTRAIT_SHADOW = "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"
local OS_CARD_LANDSCAPE_SHADOW = "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"

local OS_CARD_GRADIENT_COLOR_1 = 0xB57E28
local OS_CARD_GRADIENT_COLOR_2 = 0xF8D892
local OS_CARD_GRADIENT_COLOR_3 = 0x3A2404

local OS_CARD_TEXT_COLOR = 0xAE650B

local adTypeName = "CardWindow"
local blurUrl = nil
cardWindow.userCardInfo = {}
cardWindow.requestIds = {}
local alphaTime = 1.0

local function translationAnim(x, y)
    local anim = Animation():translation(x, y):duration(0.3)
    return anim
end

local function startViewTranslationAnim(view, x, y, table)
    if (view == nil) then
        return
    end
    if table ~= nil then
        translationAnim(x, y):with(view):callback(table):start()
    else
        translationAnim(x, y):with(view):start()
    end
end

local function startShowAnimation(view, duration)
    if (view == nil) then
        return
    end
    print("Luaview startShowAnimation")
    view:alpha(0)
    local anim = Animation():alpha(1.0):duration(duration):with(view):start()
    return anim
end

local function getHotspotExposureTrackLink(data, index)
    if (data == nil or index == nil) then
        return nil
    end
    local hotspotTrackLinkTable = data.infoTrackLink
    if (hotspotTrackLinkTable == nil) then
        return nil
    end
    local indexHotspotTrackLinkTable = hotspotTrackLinkTable[index]
    if (indexHotspotTrackLinkTable == nil) then
        return nil
    end
    return indexHotspotTrackLinkTable.exposureTrackLink
end

local function getHotspotClickTrackLink(data, index)
    if (data == nil or index == nil) then
        return nil
    end
    local hotspotTrackLinkTable = data.infoTrackLink
    if (hotspotTrackLinkTable == nil) then
        return nil
    end
    local indexHotspotTrackLinkTable = hotspotTrackLinkTable[index]
    if (indexHotspotTrackLinkTable == nil) then
        return nil
    end
    return indexHotspotTrackLinkTable.clickTrackLink
end

local function closeView()
    for key, value in pairs(cardWindow.requestIds) do
        if (value ~= nil) then
            Native:abort(value)
        end
    end
    Native:widgetEvent(eventTypeClose, cardWindow.id, adTypeName, actionTypeNone, "")
    Native:destroyView()
end

local function setBlurImage(blurView, imageUrl)
    if (blurView == nil or imageUrl == nil) then
        return
    end
    -- blurUrl = imageUrl
    -- blurView:imageBlur(imageUrl, 8)
    local isPortrait = Native:isPortraitScreen()
    if isPortrait then
        blurView:image(Data(OS_CARD_PORTRAIT_BG))
    else
        blurView:image(Data(OS_CARD_LANDSCAPE_BG))
    end
end

local function checkCollectStatus()

    if cardWindow.collectStatus == 3 then
        return 3
    end

    local collectCount = 0
    if cardWindow.isHotOrder1 == true then
        collectCount = collectCount + 1;
    end
    if cardWindow.isHotOrder2 == true then
        collectCount = collectCount + 1;
    end
    if cardWindow.isHotOrder3 == true then
        collectCount = collectCount + 1;
    end
    cardWindow.collectCount = collectCount
    if collectCount == cardWindow.sumHotspot then
        return 2
    end
    return 1
end

local function postUserCardInfo()

    local businessInfoTable = {
        collectStatus = checkCollectStatus(),
        isHotOrder1 = cardWindow.isHotOrder1,
        isHotOrder2 = cardWindow.isHotOrder2,
        isHotOrder3 = cardWindow.isHotOrder3,
    }

    local businessParamTable = {
        userId = Native:getIdentity(),
        creativeId = cardWindow.data.creativeId,
        businessInfo = businessInfoTable
    }

    local paramData = {
        businessParam = businessParamTable,
        commonParam = Native:commonParam()
    }

    local paramDataString = Native:tableToJson(paramData)
    print("[LuaView] " .. paramDataString)
    -- print("[LuaView] " .. OS_HTTP_POST_MOBILE_QUERY)
    -- print("[LuaView] " .. Native:aesEncrypt(paramDataString, OS_HTTP_PUBLIC_KEY, OS_HTTP_PUBLIC_KEY))
    local requestId = cardWindow.request:post(OS_HTTP_POST_MOBILE_QUERY, {
        bu_id = buId,
        device_type = deviceType,
        data = Native:aesEncrypt(paramDataString, OS_HTTP_PUBLIC_KEY, OS_HTTP_PUBLIC_KEY)
    }, function(response, errorInfo)
        print("luaview postUserCardInfo")
        if (response == nil) then
            return
        end
        -- print("luaview postUserCardInfo 11" .. Native:tableToJson(response))
        responseData = Native:aesDecrypt(response.encryptData, OS_HTTP_PUBLIC_KEY, OS_HTTP_PUBLIC_KEY)
        print("luaview " .. responseData)
        response = toTable(responseData)
        if (response.resCode ~= "00") then
            return
        end
        local dataTable = response.launchInfoList
        if (dataTable == nil) then
            return
        end
    end, cardWindow.luaView)
    table.insert(cardWindow.requestIds, requestId)
end

local function getUserCardInfo()

    local businessInfo = {
        userId = Native:getIdentity(),
        creativeId = cardWindow.data.creativeId
    }

    local paramData = {
        businessParam = businessInfo,
        commonParam = Native:commonParam()
    }

    local paramDataString = Native:tableToJson(paramData)
    -- print("[LuaView] "..paramDataString)
    -- print("[LuaView] "..OS_HTTP_GET_MOBILE_QUERY)
    -- print("[LuaView] "..Native:aesEncrypt(paramDataString, OS_HTTP_PUBLIC_KEY, OS_HTTP_PUBLIC_KEY))
    local requestId = cardWindow.request:post(OS_HTTP_GET_MOBILE_QUERY, {
        bu_id = buId,
        device_type = deviceType,
        data = Native:aesEncrypt(paramDataString, OS_HTTP_PUBLIC_KEY, OS_HTTP_PUBLIC_KEY)
    }, function(response, errorInfo)
        -- print("luaview getUserVoteInfo")
        if (response == nil) then
            return
        end
        -- print("luaview getUserVoteInfo 11"..Native:tableToJson(response))
        responseData = Native:aesDecrypt(response.encryptData, OS_HTTP_PUBLIC_KEY, OS_HTTP_PUBLIC_KEY)
        print("luaview " .. responseData)
        response = toTable(responseData)
        if (response.resCode ~= "00") then
            return
        end
        local dataTable = response.businessInfo
        if (dataTable == nil) then
            postUserCardInfo()
            return
        end
        cardWindow.data.data.userCardInfo = dataTable
    end, cardWindow.luaView)
    table.insert(cardWindow.requestIds, requestId)
end

local function setLuaViewSize(luaview, isPortrait) --设置当前容器大小
    if (luaview == nil) then
        return
    end
    local screenWidth, screenHeight = System.screenSize()
    if (isPortrait) then
        luaview:frame(0, 0, math.min(screenWidth, screenHeight), math.max(screenWidth, screenHeight))
    else
        luaview:frame(0, 0, math.max(screenWidth, screenHeight), math.min(screenWidth, screenHeight))
        if (System.android()) then
            luaview:align(Align.RIGHT)
        end
    end
end

local function setCardViewSize(data, cardWindowView, isPortrait) --设置当前容器大小
    if (data == nil or cardWindowView == nil) then
        return
    end
    local screenWidth, screenHeight = System.screenSize()
    if (isPortrait) then
        if (System.android()) then
            cardWindowView:frame(0, 0, cardWindow.portraitWidth, cardWindow.portraitHeight)
            cardWindowView:align(Align.BOTTOM)
        else
            cardWindowView:frame(0, math.max(screenWidth, screenHeight) - cardWindow.portraitHeight, cardWindow.portraitWidth, cardWindow.portraitHeight)
        end
    else
        if (System.android()) then
            cardWindowView:frame(0, 0, 200 * scale, math.min(screenWidth, screenHeight))
            cardWindowView:align(Align.RIGHT)
        else
            cardWindowView:frame(math.max(screenWidth, screenHeight) - 200 * scale, 0, 200 * scale, math.min(screenWidth, screenHeight))
        end
    end
end

local function setCardTopContentViewSize(data, cardWindowTopContentView, isPortrait) --设置当前容器大小
    if (data == nil or cardWindowTopContentView == nil) then
        return
    end
    if (isPortrait) then
        cardWindowTopContentView:backgroundColor(0xEAEAEA, 1)
        cardWindowTopContentView:frame(0, 0, cardWindow.portraitWidth, cardWindow.portraitHeight * 0.877)
    else
        cardWindowTopContentView:backgroundColor(0x000000, 0)
        cardWindowTopContentView:frame(0, 0, 200 * scale, 336.8 * scale)
        cardWindowTopContentView:align(Align.RIGHT)
    end
end

local function setCardBlurViewViewSize(data, cardBlurView, isPortrait) --设置当前容器大小
    if (data == nil or cardBlurView == nil) then
        return
    end
    if (isPortrait) then
        cardBlurView:image(Data(OS_CARD_PORTRAIT_BG))
        cardBlurView:frame(0, 0, cardWindow.portraitWidth, cardWindow.portraitHeight * 1.0)
    else
        cardBlurView:image(Data(OS_CARD_LANDSCAPE_BG))
        cardBlurView:frame(0, 0, 200 * scale, 336.8 * scale)
    end
end

local function setCardImageLayoutSize(data, index, cardImageLayout, cardImage, cardBgView, isPortrait)
    if (data == nil or cardImageLayout == nil or cardImage == nil or cardBgView == nil) then
        return
    end
    local x, y, w, h = 0, 0, 0, 0
    if (isPortrait) then
        if (cardWindow.sumHotspot == 2) then
            w = cardWindow.portraitWidth * 0.276
            --            h = cardWindow.portraitHeight * 0.317
            h = w / 0.743
            y = cardWindow.portraitHeight * 0.086
            if (index == 1) then
                x = cardWindow.portraitWidth * 0.205
            else
                x = cardWindow.portraitWidth * 0.520
            end
        else
            w = cardWindow.portraitWidth * 0.276
            --            h = cardWindow.portraitHeight * 0.317
            h = w / 0.743
            y = cardWindow.portraitHeight * 0.086
            if (index == 1) then
                x = cardWindow.portraitWidth * 0.057
            elseif index == 2 then
                x = cardWindow.portraitWidth * 0.363
            else
                x = cardWindow.portraitWidth * 0.667
            end
        end
    else
        if (cardWindow.sumHotspot == 2) then
            w = 78.2 * scale
            h = 105.2 * scale
            y = 42 * scale
            if (index == 1) then
                x = 17.6 * scale
            elseif (index == 2) then
                x = 105.6 * scale
            end
        else
            w = 85.2 * scale
            h = 114.4 * scale
            y = 29 * scale
            if (index == 1) then
                x = 14.9 * scale
                y = 39 * scale
            elseif index == 2 then
                x = 57.5 * scale
                y = 29 * scale
            else
                x = 100.1 * scale
                y = 39 * scale
            end
        end
    end

    cardImageLayout:frame(x, y, w, h)
    cardImage:frame(scale, scale, w - 2 * scale, h - 2 * scale)
    cardBgView:frame(0, 0, w, h)
    --    cardImage:cornerRadius(5 * scale)
end

local function setCardBottomViewSize(data, cardBottomView, cardFlexView, cardFlexLabel, isPortrait) --设置当前容器大小
    if (data == nil or cardBottomView == nil or cardFlexView == nil or cardFlexLabel == nil) then
        return
    end
    local screenWidth, screenHeight = System.screenSize()
    local corner = 0
    if (isPortrait) then
        cardBottomView:frame(0, 0, cardWindow.portraitWidth, cardWindow.portraitHeight * 0.123)
        cardBottomView:align(Align.BOTTOM)
        cardFlexView:frame(0, 0, cardWindow.hotspotRatio * cardWindow.portraitWidth, cardWindow.portraitHeight * 0.123)
        corner = cardWindow.portraitHeight * 0.123 / 2
        cardFlexLabel:frame(0, 0, cardWindow.portraitWidth, cardWindow.portraitHeight * 0.123)
    else
        cardBottomView:frame(0, 0, 200 * scale, 38.3 * scale)
        cardBottomView:align(Align.BOTTOM)
        cardFlexView:frame(0, 0, cardWindow.hotspotRatio * 200 * scale, 38.3 * scale)
        cardFlexLabel:frame(0, 0, 200 * scale, 38.3 * scale)
        corner = 19.15 * scale
    end

    cardFlexView:corner(0, 0, corner, corner, corner, corner, 0, 0)
end

local function setCardTitleViewSize(data, cardTitleView, isPortrait)
    if (data == nil or cardTitleView == nil) then
        return
    end
    local x, y, w, h = 0, 0, 0, 0
    if (isPortrait) then
        if (cardWindow.collectStatus == 3) then
            x = cardWindow.portraitWidth * 0.227
            y = cardWindow.portraitHeight * 0.643
            w = cardWindow.portraitWidth * 0.567
            h = cardWindow.portraitHeight * 0.082
            cardTitleView:textColor(OS_CARD_TEXT_COLOR)
            cardTitleView:textSize(15)
        else
            x = cardWindow.portraitWidth * 0.227
            w = cardWindow.portraitWidth * 0.567
            if (System.android()) then
                y = cardWindow.portraitHeight * 0.423
                h = cardWindow.portraitHeight * 0.136
            else
                y = cardWindow.portraitHeight * 0.408
                h = cardWindow.portraitHeight * 0.090
            end
            cardTitleView:textColor(OS_CARD_TEXT_COLOR)
            cardTitleView:textSize(15)
        end
    else
        if (cardWindow.collectStatus == 3) then
            x = 13.9 * scale
            y = 200.5 * scale
            w = 171 * scale
            h = 40 * scale
            cardTitleView:textColor(OS_CARD_TEXT_COLOR)
            cardTitleView:textSize(13)
        else
            x = 13.9 * scale
            y = 173.5 * scale
            w = 171 * scale
            h = 40 * scale
            cardTitleView:textColor(OS_CARD_TEXT_COLOR)
            cardTitleView:textSize(13)
        end
    end
    --    if (System.android()) then
    --        cardTitleView:margin(x, y, x, 0)
    --    else
    --        cardTitleView:frame(x, y, w, h)
    --    end
    cardTitleView:frame(x, y, w, h)
end

local function setCardContentImageView(data, cardContentImageView, cardContentImageShadowView, isPortrait)
    if (data == nil or cardContentImageView == nil) then
        return
    end
    local x, y, w, h = 0, 0, 0, 0
    if (isPortrait) then
        if (cardWindow.collectStatus == 3) then
            x = cardWindow.portraitWidth * 0.120
            y = cardWindow.portraitHeight * 0.207
            w = cardWindow.portraitWidth * 0.763
            h = w * 80.0 / 165.0 --cardWindow.portraitHeight * 0.316
        else
            x = cardWindow.portraitWidth * 0.187
            y = cardWindow.portraitHeight * 0.558
            w = cardWindow.portraitWidth * 0.628
            h = w * 80.0 / 165.0 --cardWindow.portraitHeight * 0.260
        end
        -- cardContentImageShadowView:backgroundColor(0xFF0000)
        cardContentImageShadowView:image(Data(OS_CARD_PORTRAIT_SHADOW))
        cardContentImageShadowView:frame((cardWindow.portraitWidth - 348 * scale) * 0.5, y + h - 8 * scale, 348 * scale, 16 * scale)
    else
        if (cardWindow.collectStatus == 3) then
            x = 17.7 * scale
            y = 96.5 * scale
            w = 165 * scale
            h = 80 * scale
        else
            x = 17.7 * scale
            y = 225.5 * scale
            w = 165 * scale
            h = 80 * scale
        end
        -- cardContentImageShadowView:backgroundColor(0xFF00FF)
        cardContentImageShadowView:image(Data(OS_CARD_LANDSCAPE_SHADOW))
        cardContentImageShadowView:frame(0 * scale, y + h - 6 * scale, 200 * scale, 12 * scale)
    end
    cardContentImageView:frame(x, y, w, h)
end

local function setCardCloseImageView(data, cardCloseLayout, cardCloseImageView, isPortrait)
    if (data == nil or cardCloseLayout == nil or cardCloseImageView == nil) then
        return
    end
    --    local x, y, w, h = 0, 0, 0, 0
    local size = cardWindow.portraitHeight * 0.083
    if (isPortrait) then
        --        x = 350 * scale
        --        y = 8 * scale
        --        w = 15 * scale
        --        h = 15 * scale
        cardCloseLayout:frame(0, 0, size, size)
        cardCloseImageView:frame(0, 0, 15 * scale, 15 * scale)
        cardCloseImageView:show()
        cardCloseLayout:align(Align.RIGHT)
        cardCloseImageView:align(Align.CENTER)
    else
        cardCloseImageView:hide()
    end
end

--屏幕旋转--
local function rotationScreen(isPortrait)
    setLuaViewSize(cardWindow.luaView, isPortrait)
    setCardViewSize(cardWindow.data, cardWindow.cardWindowView, isPortrait)
    setCardTopContentViewSize(cardWindow.data, cardWindow.cardWindowTopContentView, isPortrait)
    setCardBlurViewViewSize(cardWindow.data, cardWindow.cardBlurImageView, isPortrait)
    setCardBottomViewSize(cardWindow.data, cardWindow.cardBottomView, cardWindow.cardFlexView, cardWindow.cardFlexLabel, isPortrait)
    setCardCloseImageView(cardWindow.data, cardWindow.cardCloseLayout, cardWindow.cardCloseImageView, isPortrait)
    if (cardWindow.collectStatus ~= 3) then
        if (cardWindow.cardImageLayout3 ~= nil) then
            cardWindow.cardImageLayout1:rotation(0)
            cardWindow.cardImageLayout3:rotation(0)
        end
        setCardImageLayoutSize(cardWindow.data, 1, cardWindow.cardImageLayout1, cardWindow.cardImageView1, cardWindow.cardBgView1, isPortrait)
        setCardImageLayoutSize(cardWindow.data, 2, cardWindow.cardImageLayout2, cardWindow.cardImageView2, cardWindow.cardBgView2, isPortrait)
        setCardImageLayoutSize(cardWindow.data, 3, cardWindow.cardImageLayout3, cardWindow.cardImageView3, cardWindow.cardBgView3, isPortrait)
        if (isPortrait == false and cardWindow.cardImageLayout3 ~= nil and cardWindow.sumHotspot >= 3) then
            cardWindow.cardImageLayout1:rotation(-10)
            cardWindow.cardImageLayout3:rotation(10)
        end
    end
    setCardTitleViewSize(cardWindow.data, cardWindow.cardTitleLabel, isPortrait)
    setCardContentImageView(cardWindow.data, cardWindow.cardContentImageView, cardWindow.cardContentImageShadowView, isPortrait)
end

local function registerMedia()
    local media = Media()
    -- body
    -- 注册window callback通知
    local callbackTable = {
        --0: 竖屏小屏幕，1 竖屏全凭，2 横屏全屏
        onPlayerSize = function(type)
            if (type == 0) then
                rotationScreen(true)
            elseif (type == 1) then
                rotationScreen(true)
            elseif (type == 2) then
                rotationScreen(false)
            end
        end
    }
    media:mediaCallback(callbackTable)
    return media
end

local function registerWindow()
    local nativeWindow = nil
    if System.ios() then
        nativeWindow = NativeWindow()
    else
        nativeWindow = nativeWindow
    end
    local callbackTable = {
        onShow = function()
            if (System.android()) then
                setBlurImage(cardWindow.cardBlurImageView, blurUrl)
            end
        end
    }
    if (nativeWindow == nil and System.android()) then
        nativeWindow = window
    end
    if (nativeWindow == nil) then
        return
    end
    nativeWindow:callback(callbackTable)
    return nativeWindow
end

--全局父控件
local function createLuaView(isPortrait)
    local luaView
    -- if System.android() then
    --     luaView = View()
    -- else
    --     luaView = ThroughView()
    -- end
    luaView = View()
    setLuaViewSize(luaView, isPortrait)
    return luaView
end

local function createCardView(data, isPortrait)
    local cardWindowView = View()

    setCardViewSize(data, cardWindowView, isPortrait)

    return cardWindowView
end

local function createCardTopContentView(data, isPortrait)
    local cardWindowTopContentView = View()
    setCardTopContentViewSize(data, cardWindowTopContentView, isPortrait)
    return cardWindowTopContentView
end

local function createCardBlurView(data, isPortrait)
    local cardBlurImageView = Image(Native)
    cardBlurImageView:scaleType(ScaleType.FIT_XY)
    setCardBlurViewViewSize(data, cardBlurImageView, isPortrait)
    return cardBlurImageView
end

--创建单个--
local function createCardImageItem()
    local cardImageLayout = View()
    local cardImageView = Image(Native)
    cardImageView:scaleType(ScaleType.FIT_XY)
    local cardBgView = Image(Native)
    cardBgView:image(Data(OS_ICON_CARD_IMAGE_BG))
    cardBgView:scaleType(ScaleType.FIT_XY)
    cardImageLayout:addView(cardImageView)
    cardImageLayout:addView(cardBgView)
    return cardImageLayout, cardImageView, cardBgView
end

local function createCardGroupView(data, isPortrait)
    local cardImageLayout1, cardImageView1, cardBgView1 = createCardImageItem()
    local cardImageLayout2, cardImageView2, cardBgView2 = createCardImageItem()
    local cardImageLayout3, cardImageView3, cardBgView3
    if (cardWindow.sumHotspot == 3) then
        cardImageLayout3, cardImageView3, cardBgView3 = createCardImageItem()
    end
    setCardImageLayoutSize(data, 1, cardImageLayout1, cardImageView1, cardBgView1, isPortrait)
    setCardImageLayoutSize(data, 2, cardImageLayout2, cardImageView2, cardBgView2, isPortrait)
    setCardImageLayoutSize(data, 3, cardImageLayout3, cardImageView3, cardBgView3, isPortrait)
    return cardImageLayout1, cardImageView1, cardBgView1, cardImageLayout2, cardImageView2, cardBgView2, cardImageLayout3, cardImageView3, cardBgView3
end

local function createCardBottomView(data, isPortrait)
    local cardBottomView = GradientView()
    cardBottomView:gradient(OS_CARD_GRADIENT_COLOR_3, OS_CARD_GRADIENT_COLOR_3)

    local cardFlexView = GradientView()
    if System.ios() then
        cardFlexView:gradient(OS_CARD_GRADIENT_COLOR_1, 1.0, OS_CARD_GRADIENT_COLOR_2, 1.0, 0.0, 0.5, 1.0, 0.5)
    else
        cardFlexView:gradient(OS_CARD_GRADIENT_COLOR_1, 1.0, OS_CARD_GRADIENT_COLOR_2, 1.0, Orientation.LEFT_RIGHT)
    end

    local text = "运气真好，还差" .. tostring(cardWindow.sumHotspot - cardWindow.collectCount) .. "张就成功啦"
    local cardFlexLabel = Label(Native)
    cardFlexLabel:text(text)
    cardFlexLabel:textColor(0xFFFFFF)
    cardFlexLabel:textAlign(TextAlign.CENTER)

    setCardBottomViewSize(data, cardBottomView, cardFlexView, cardFlexLabel, isPortrait)

    return cardBottomView, cardFlexView, cardFlexLabel
end

local function createCardCloseImageView(data, isPortrait)
    local cardCloseLayout = View()
    cardCloseLayout:align(Align.RIGHT)
    local cardCloseImageView = Image(Native)
    cardCloseImageView:align(Align.CENTER)
    cardCloseImageView:scaleType(ScaleType.FIT_XY)
    cardCloseImageView:image(Data(OS_ICON_WEDGE_CLOSE))
    cardCloseImageView:hide()
    setCardCloseImageView(data, cardCloseLayout, cardCloseImageView, isPortrait)
    cardCloseLayout:addView(cardCloseImageView)
    return cardCloseLayout, cardCloseImageView
end

local function createTitleView(data, isPortrait)
    local cardTitleLabel = Label(Native)
    cardTitleLabel:textAlign(TextAlign.CENTER)
    cardTitleLabel:lines(2)
    cardTitleLabel:text("")
    setCardTitleViewSize(data, cardTitleLabel, isPortrait)
    return cardTitleLabel
end

local function createCardContentImageView(data, isPortrait)
    local cardContentImageView = Image(Native)
    cardContentImageView:scaleType(ScaleType.CENTER_CROP)

    local cardContentImageShadowView = Image(Native)
    cardContentImageShadowView:scaleType(ScaleType.CENTER_CROP)
    setCardContentImageView(data, cardContentImageView, cardContentImageShadowView, isPortrait)
    return cardContentImageView, cardContentImageShadowView
end

--未收集成功 默认无需处理
local function notCollectState(data)
    local dataTable = data.data
    if (dataTable == nil) then
        return
    end
    local collectTable = dataTable.collect
    if (collectTable == nil) then
        return
    end
    -- print("LuaView notCollectState "..Native:tableToJson(dataTable))
    local contentImageUrl = collectTable.imageUrl
    if (contentImageUrl ~= nil) then
        cardWindow.cardContentImageView:image(contentImageUrl)
    end
    local content = collectTable.content
    if content ~= nil then
        cardWindow.cardTitleLabel:text(content)
    else
        cardWindow.cardTitleLabel:text("")
    end
    local hotspotArrayTable = dataTable.hotspotArray
    if (hotspotArrayTable == nil) then
        return
    end
    -- print("LuaView hotspotArrayTable "..Native:tableToJson(hotspotArrayTable))
    if (cardWindow.isHotOrder1) then
        local HotOrderTable = hotspotArrayTable[1]
        if (HotOrderTable == nil or cardWindow.cardImageView1 == nil) then
            return
        end
        local imageUrl = HotOrderTable.imageUrl
        if (imageUrl ~= nil) then
            if (cardWindow.hotspotOrder == 1) then
                setBlurImage(cardWindow.cardBlurImageView, imageUrl)
                startShowAnimation(cardWindow.cardImageView1, alphaTime)
            end
            cardWindow.cardImageView1:image(imageUrl)
        end
    else
        if (cardWindow.cardImageView1 ~= nil) then
            cardWindow.cardImageView1:image(Data(OS_ICON_CARD_NO_COLLECT))
            cardWindow.cardBgView1:hide()
        end
    end

    if (cardWindow.isHotOrder2) then
        local HotOrderTable = hotspotArrayTable[2]
        if (HotOrderTable == nil or cardWindow.cardImageView2 == nil) then
            return
        end
        local imageUrl = HotOrderTable.imageUrl
        if (imageUrl ~= nil) then
            if (cardWindow.hotspotOrder == 2) then
                setBlurImage(cardWindow.cardBlurImageView, imageUrl)
                startShowAnimation(cardWindow.cardImageView2, alphaTime)
            end
            cardWindow.cardImageView2:image(imageUrl)
        end
    else
        if (cardWindow.cardImageView2 ~= nil) then
            cardWindow.cardImageView2:image(Data(OS_ICON_CARD_NO_COLLECT))
            cardWindow.cardBgView2:hide()
        end
    end

    if (cardWindow.isHotOrder3) then
        local HotOrderTable = hotspotArrayTable[3]
        if (HotOrderTable == nil or cardWindow.cardImageView3 == nil) then
            return
        end
        local imageUrl = HotOrderTable.imageUrl
        if (imageUrl ~= nil) then
            if (cardWindow.hotspotOrder == 3) then
                setBlurImage(cardWindow.cardBlurImageView, imageUrl)
                startShowAnimation(cardWindow.cardImageView3, alphaTime)
            end
            cardWindow.cardImageView3:image(imageUrl)
        end
    else
        if (cardWindow.cardImageView3 ~= nil) then
            cardWindow.cardImageView3:image(Data(OS_ICON_CARD_NO_COLLECT))
            cardWindow.cardBgView3:hide()
        end
    end
end

--收集成功 未领取
local function collectState(data)
    if System.ios() then
        cardWindow.cardBottomView:gradient(OS_CARD_GRADIENT_COLOR_1, 1.0, OS_CARD_GRADIENT_COLOR_2, 1.0, 0.0, 0.5, 1.0, 0.5)
    else
        cardWindow.cardBottomView:gradient(OS_CARD_GRADIENT_COLOR_1, 1.0, OS_CARD_GRADIENT_COLOR_2, 1.0, Orientation.LEFT_RIGHT)
    end
    cardWindow.cardFlexView:hide()
    local dataTable = data.data
    if (dataTable == nil) then
        return
    end
    local collectTable = dataTable.collect
    if (collectTable == nil) then
        return
    end
    local btnTitle = collectTable.btnTitle
    if (btnTitle ~= nil) then
        cardWindow.cardFlexLabel:text(btnTitle)
    end
    local content = collectTable.content
    if content ~= nil then
        cardWindow.cardTitleLabel:text(content)
    else
        cardWindow.cardTitleLabel:text("")
    end

    local imageUrl = collectTable.imageUrl
    if (imageUrl ~= nil) then
        cardWindow.cardContentImageView:image(imageUrl)
    end
    local hotspotArrayTable = dataTable.hotspotArray
    if (hotspotArrayTable == nil) then
        return
    end
    if (cardWindow.isHotOrder1) then
        local HotOrderTable = hotspotArrayTable[1]
        if (HotOrderTable == nil or cardWindow.cardImageView1 == nil) then
            return
        end
        local imageUrl = HotOrderTable.imageUrl
        if (imageUrl ~= nil) then
            cardWindow.cardImageView1:image(imageUrl)
            if (cardWindow.hotspotOrder == 1) then
                setBlurImage(cardWindow.cardBlurImageView, imageUrl)
                startShowAnimation(cardWindow.cardImageView1, alphaTime)
            end
        end
    else
        if (cardWindow.cardImageView1 ~= nil) then
            cardWindow.cardImageView1:image(Data(OS_ICON_CARD_NO_COLLECT))
            cardWindow.cardBgView1:hide()
        end
    end

    if (cardWindow.isHotOrder2) then
        local HotOrderTable = hotspotArrayTable[2]
        if (HotOrderTable == nil or cardWindow.cardImageView2 == nil) then
            return
        end
        local imageUrl = HotOrderTable.imageUrl
        if (imageUrl ~= nil) then
            cardWindow.cardImageView2:image(imageUrl)
            if (cardWindow.hotspotOrder == 2) then
                setBlurImage(cardWindow.cardBlurImageView, imageUrl)
                startShowAnimation(cardWindow.cardImageView2, alphaTime)
            end
        end
    else
        if (cardWindow.cardImageView2 ~= nil) then
            cardWindow.cardImageView2:image(Data(OS_ICON_CARD_NO_COLLECT))
            cardWindow.cardBgView2:hide()
        end
    end

    if (cardWindow.isHotOrder3) then
        local HotOrderTable = hotspotArrayTable[3]
        if (HotOrderTable == nil or cardWindow.cardImageView3 == nil) then
            return
        end
        local imageUrl = HotOrderTable.imageUrl
        if (imageUrl ~= nil) then
            cardWindow.cardImageView3:image(imageUrl)
            if (cardWindow.hotspotOrder == 3) then
                setBlurImage(cardWindow.cardBlurImageView, imageUrl)
                startShowAnimation(cardWindow.cardImageView3, alphaTime)
            end
        end
    else
        if (cardWindow.cardImageView3 ~= nil) then
            cardWindow.cardImageView3:image(Data(OS_ICON_CARD_NO_COLLECT))
            cardWindow.cardBgView3:hide()
        end
    end

    --点击lua文件
    cardWindow.cardBottomView:onClick(function()
        --TODO领奖操作逻辑处理
        cardWindow.collectStatus = 3
        postUserCardInfo()
        local clickLinkUrl = getHotspotClickTrackLink(data, 1)
        if (clickLinkUrl ~= nil) then
            Native:get(clickLinkUrl)
        end
        if (cardWindow.launchPlanId ~= nil) then
            osTrack(cardWindow.launchPlanId, 3, 1)
        end
        if collectTable.linkType == 2 then
            Native:widgetEvent(eventTypeClick, cardWindow.id, adTypeName, actionTypeOpenUrl, collectTable.linkUrl)
            performWithDelay(function()
                closeView()
            end, 500)
            return
        end

        cardWindow.cardFlexLabel:text("确定")
        cardWindow.cardWindowTopContentView:removeAllViews()
        local isPortrait = Native:isPortraitScreen()
        setCardBlurViewViewSize(cardWindow.data, cardWindow.cardBlurImageView, isPortrait)
        setCardCloseImageView(cardWindow.data, cardWindow.cardCloseLayout, cardWindow.cardCloseImageView, isPortrait)
        setCardTitleViewSize(cardWindow.data, cardWindow.cardTitleLabel, isPortrait)
        setCardContentImageView(cardWindow.data, cardWindow.cardContentImageView, cardWindow.cardContentImageShadowView, isPortrait)
        cardWindow.cardWindowTopContentView:addView(cardWindow.cardBlurImageView)
        cardWindow.cardWindowTopContentView:addView(cardWindow.cardCloseImageView)
        cardWindow.cardWindowTopContentView:addView(cardWindow.cardTitleLabel)
        cardWindow.cardWindowTopContentView:addView(cardWindow.cardContentImageView)

        local successTable = dataTable.success
        if (successTable == nil) then
            return
        end

        cardWindow.cardBottomView:onClick(function()
            Native:widgetEvent(eventTypeClick, cardWindow.id, adTypeName, actionTypeGetItem, successTable.itemId)
            closeView()
        end)

        local title = successTable.title
        if (title ~= nil) then
            cardWindow.cardTitleLabel:text(title)
        end

        local imageUrl = successTable.imageUrl
        if (imageUrl ~= nil) then
            cardWindow.cardContentImageView:image(imageUrl)
        end
    end)
end

local function successState(data)
    if System.ios() then
        cardWindow.cardBottomView:gradient(OS_CARD_GRADIENT_COLOR_1, 1.0, OS_CARD_GRADIENT_COLOR_2, 1.0, 0.0, 0.5, 1.0, 0.5)
    else
        cardWindow.cardBottomView:gradient(OS_CARD_GRADIENT_COLOR_1, 1.0, OS_CARD_GRADIENT_COLOR_2, 1.0, Orientation.LEFT_RIGHT)
    end
    cardWindow.cardFlexView:hide()
    cardWindow.cardFlexLabel:text("确定") --写死？？？

    cardWindow.cardWindowTopContentView:removeAllViews()
    local isPortrait = Native:isPortraitScreen()
    setCardBlurViewViewSize(cardWindow.data, cardWindow.cardBlurImageView, isPortrait)
    setCardCloseImageView(cardWindow.data, cardWindow.cardCloseLayout, cardWindow.cardCloseImageView, isPortrait)
    setCardTitleViewSize(cardWindow.data, cardWindow.cardTitleLabel, isPortrait)
    setCardContentImageView(cardWindow.data, cardWindow.cardContentImageView, cardWindow.cardContentImageShadowView, isPortrait)
    cardWindow.cardWindowTopContentView:addView(cardWindow.cardBlurImageView)
    cardWindow.cardWindowTopContentView:addView(cardWindow.cardCloseImageView)
    cardWindow.cardWindowTopContentView:addView(cardWindow.cardTitleLabel)
    cardWindow.cardWindowTopContentView:addView(cardWindow.cardContentImageView)
    cardWindow.cardTitleLabel:text("您已经领取过这套卡牌奖励哦") --写死？？？
    cardWindow.cardBottomView:onClick(function()
        closeView()
    end)
    local dataTable = data.data
    if (dataTable == nil) then
        return
    end
    local successTable = dataTable.success
    if (successTable == nil) then
        return
    end

    local successImageUrl = successTable.imageUrl
    if (successImageUrl ~= nil) then
        cardWindow.cardContentImageView:image(successImageUrl)
    end
    local hotspotArrayTable = dataTable.hotspotArray
    if (hotspotArrayTable == nil or cardWindow.hotspotOrder == nil) then
        return
    end
    local hotspotItemTable = hotspotArrayTable[cardWindow.hotspotOrder]
    if (hotspotItemTable == nil) then
        return
    end
    local imageUrl = hotspotItemTable.imageUrl
    if (imageUrl ~= nil) then
        setBlurImage(cardWindow.cardBlurImageView, imageUrl)
    end
end

local function onCreate(data)
    if (cardWindow.launchPlanId ~= nil) then
        osTrack(cardWindow.launchPlanId, 1, 1)
    end

    local isPortrait = Native:isPortraitScreen()
    cardWindow.media = registerMedia()
    cardWindow.window = registerWindow()
    cardWindow.luaView = createLuaView(isPortrait)

    cardWindow.cardWindowView = createCardView(data, isPortrait)
    cardWindow.cardWindowTopContentView = createCardTopContentView(data, isPortrait)
    cardWindow.cardBlurImageView = createCardBlurView(data, isPortrait)
    cardWindow.cardWindowTopContentView:addView(cardWindow.cardBlurImageView)

    cardWindow.cardCloseLayout, cardWindow.cardCloseImageView = createCardCloseImageView(data, isPortrait)
    cardWindow.cardBottomView, cardWindow.cardFlexView, cardWindow.cardFlexLabel = createCardBottomView(data, isPortrait)

    -- 首先判断状态
    if (cardWindow.collectStatus ~= 3) then
        cardWindow.cardImageLayout1, cardWindow.cardImageView1, cardWindow.cardBgView1, cardWindow.cardImageLayout2, cardWindow.cardImageView2, cardWindow.cardBgView2, cardWindow.cardImageLayout3, cardWindow.cardImageView3, cardWindow.cardBgView3 = createCardGroupView(data, isPortrait)
        cardWindow.cardWindowTopContentView:addView(cardWindow.cardImageLayout1)
        if (cardWindow.sumHotspot == 3) then
            cardWindow.cardWindowTopContentView:addView(cardWindow.cardImageLayout3)
        end
        cardWindow.cardWindowTopContentView:addView(cardWindow.cardImageLayout2)
        if (isPortrait == false and cardWindow.sumHotspot >= 3) then
            cardWindow.cardImageLayout1:rotation(-10)
            cardWindow.cardImageLayout3:rotation(10)
        end
    end


    cardWindow.cardTitleLabel = createTitleView(data, isPortrait)
    cardWindow.cardContentImageView, cardWindow.cardContentImageShadowView = createCardContentImageView(data, isPortrait)

    cardWindow.cardBottomView:addView(cardWindow.cardFlexView)
    cardWindow.cardBottomView:addView(cardWindow.cardFlexLabel)

    cardWindow.cardWindowTopContentView:addView(cardWindow.cardCloseLayout)
    cardWindow.cardWindowTopContentView:addView(cardWindow.cardTitleLabel)
    cardWindow.cardWindowTopContentView:addView(cardWindow.cardContentImageShadowView)
    cardWindow.cardWindowTopContentView:addView(cardWindow.cardContentImageView)

    cardWindow.cardWindowView:addView(cardWindow.cardWindowTopContentView)

    cardWindow.cardWindowView:addView(cardWindow.cardBottomView)

    cardWindow.luaView:addView(cardWindow.cardWindowView)

    local screenWidth, screenHeight = System.screenSize()
    if (isPortrait) then
        if System.ios() then
            cardWindow.cardWindowView:y(math.max(screenWidth, screenHeight))
            startViewTranslationAnim(cardWindow.cardWindowView, 0, -cardWindow.portraitHeight)
        else
            cardWindow.cardWindowView:translation(0, 438 * scale)
            startViewTranslationAnim(cardWindow.cardWindowView, 0, 0)
        end

    else
        if System.ios() then
            cardWindow.cardWindowView:x(math.max(screenWidth, screenHeight))
            startViewTranslationAnim(cardWindow.cardWindowView, -200 * scale, 0)
        else
            cardWindow.cardWindowView:translation(200 * scale, 0)
            startViewTranslationAnim(cardWindow.cardWindowView, 0, 0)
        end
    end

    cardWindow.cardWindowView:onClick(function()
    end)

    cardWindow.cardCloseLayout:onClick(function()
        local isPortrait = Native:isPortraitScreen()
        if (isPortrait) then
            startViewTranslationAnim(cardWindow.cardWindowView, 0, 438 * scale, {
                onCancel = function()
                    closeView()
                end,
                onEnd = function()
                    closeView()
                end,
                onPause = function()
                    closeView()
                end
            })
        end
    end)

    cardWindow.luaView:onClick(function()
        local isPortrait = Native:isPortraitScreen()
        if (isPortrait) then
            startViewTranslationAnim(cardWindow.cardWindowView, 0, 438 * scale, {
                onCancel = function()
                    closeView()
                end,
                onEnd = function()
                    closeView()
                end,
                onPause = function()
                    closeView()
                end
            })
        else
            startViewTranslationAnim(cardWindow.cardWindowView, 200 * scale, 0, {
                onCancel = function()
                    closeView()
                end,
                onEnd = function()
                    closeView()
                end,
                onPause = function()
                    closeView()
                end
            })
        end
    end)
    --- -逻辑处理----
    ------ 状态判断--------
    if (cardWindow.collectStatus == 1) then
        notCollectState(data)
    elseif (cardWindow.collectStatus == 2) then
        collectState(data)
    else
        successState(data)
    end
    Native:widgetEvent(eventTypeShow, cardWindow.id, adTypeName, actionTypeNone, "")
end

local function setConfig(data)
    if (data == nil) then
        return
    end
    cardWindow.data = data
    local sumHotspot = data.sumHotspot
    if (sumHotspot == nil) then
        sumHotspot = 2
    end
    local hotspotOrder = data.hotspotOrder
    if (hotspotOrder == nil) then
        hotspotOrder = 0
    end
    local screenWidth, screenHeight = System.screenSize()
    local videoWidth, videoHight, marginTop = Native:getVideoSize(0)
    cardWindow.portraitWidth = math.min(screenWidth, screenHeight) --宽
    cardWindow.portraitHeight = math.max(screenWidth, screenHeight) - videoHight - marginTop --高
    cardWindow.sumHotspot = sumHotspot
    cardWindow.hotspotOrder = hotspotOrder + 1 --当前热点序号
    cardWindow.hotspotRatio = 0.333 --收集占半分比
    cardWindow.collectStatus = 1
    cardWindow.collectCount = 1
    cardWindow.id = "os_card_window" .. tostring(data.id) .. tostring(data.hotspotOrder)
    cardWindow.launchPlanId = data.launchPlanId
    cardWindow.isHotOrder1 = false
    cardWindow.isHotOrder2 = false
    cardWindow.isHotOrder3 = false
    if data.data.userCardInfo ~= nil then
        -- print("LuaView os card window userCardInfo "..Native:tableToJson(data.data.userCardInfo))
        cardWindow.userCardInfo = data.data.userCardInfo
        if cardWindow.hotspotOrder == 1 then
            cardWindow.userCardInfo.isHotOrder1 = true
        elseif cardWindow.hotspotOrder == 2 then
            cardWindow.userCardInfo.isHotOrder2 = true
        elseif cardWindow.hotspotOrder == 3 then
            cardWindow.userCardInfo.isHotOrder3 = true
        end

        cardWindow.collectStatus = cardWindow.userCardInfo.collectStatus
        cardWindow.isHotOrder1 = cardWindow.userCardInfo.isHotOrder1
        cardWindow.isHotOrder2 = cardWindow.userCardInfo.isHotOrder2 --是否收集状态
        cardWindow.isHotOrder3 = cardWindow.userCardInfo.isHotOrder3
        cardWindow.collectStatus = checkCollectStatus()
        if cardWindow.userCardInfo.collectStatus == 1 then
            postUserCardInfo()
        end
        if (cardWindow.collectStatus == 2) then
            local showLinkUrl = getHotspotExposureTrackLink(data, 1)
            if (showLinkUrl ~= nil) then
                Native:get(showLinkUrl)
            end
            if (cardWindow.launchPlanId ~= nil) then
                osTrack(cardWindow.launchPlanId, 2, 1)
            end
        end
    else
        if cardWindow.hotspotOrder == 1 then
            cardWindow.isHotOrder1 = true
        elseif cardWindow.hotspotOrder == 2 then
            cardWindow.isHotOrder2 = true
        elseif cardWindow.hotspotOrder == 3 then
            cardWindow.isHotOrder3 = true
        end
        postUserCardInfo()
    end
    if (cardWindow.sumHotspot == 2) then
        if cardWindow.collectCount < 2 then
            cardWindow.hotspotRatio = cardWindow.collectCount / 2.0
        end
    elseif (cardWindow.sumHotspot == 3) then
        if cardWindow.collectCount < 3 then
            cardWindow.hotspotRatio = cardWindow.collectCount / 3.0
        end
    end
    -- cardWindow.collectStatus = 3 --1.收集未成功 2.收集成功 3.领取成功
    -- if (cardWindow.collectStatus == 1) then
    -- cardWindow.isHotOrder1 = false
    -- cardWindow.isHotOrder2 = true --是否收集状态
    -- cardWindow.isHotOrder3 = false
    -- else
    --     cardWindow.isHotOrder1 = true
    --     cardWindow.isHotOrder2 = true --是否收集状态
    --     cardWindow.isHotOrder3 = true
    -- end
end

function show(args)
    if (args == nil or args.data == nil or cardWindow.luaView ~= nil) then
        return
    end
    cardWindow.request = HttpRequest()
    setConfig(args.data)

    onCreate(args.data)
    -- postUserCardInfo()
end

