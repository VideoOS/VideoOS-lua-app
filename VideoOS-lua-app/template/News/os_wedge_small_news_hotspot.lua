--中插--
require "os_config"
require "os_string"
require "os_constant"
require "os_util"
require "os_track"
wedge = object:new()
local adTypeName = "wedge"
local scale = getScale()
local OS_ICON_NO_VOICE = "iVBORw0KGgoAAAANSUhEUgAAAC8AAAAqCAYAAAAj6gIfAAAABHNCSVQICAgIfAhkiAAAA+pJREFUWIXVmU1oXVUQx3+TpGlMTGsbqpZKUUgbIxK1dVGKC7HSRREVRahUEHUrXRTdKWgRP1KEgKuCq1qXFYXQRYi6UQrFLtxoGsEiiKLQWqxN0qbJz8W5L7l9H758vPte/K/e486Z+c+cOXNm7oX/MaIIpWpP9nMqIizCBkBHI5VlpB8GHgFmgNPAj420UQjUu9W31V9NmFZH1Ftbza0m1FB3q5+qV7wZp9V7irK9qrRRO4D9wOvAHqCrTGQjUFjkV0xe7QSeA94B7qqhqw1oX6mNelgRebUbeAs4QoHk6mFZ5NV1QD8wQkqXlqJtqYLqBuAAcII1QBxykc9yeADYAfRS6dggKce3N41dHXQAqJuAF4BnSYevh8rbtxfobiq7OuhQ15NK3SvAFgpqGUpQNwMHSWX0M2CyXguh7gX2Ad8D4xExVXqwX/3HYnBGfTBHolN9Q72cXWhn1KE6xJ9Sf8vkf1GfVqP08OuCiFcj361+WSYzoQ5UId2uPq/eyMnOm5zvgXQody1luxuEG8C3pKathAHgC3VIbcuI30IqDh+xeI8IXAJ+WlhfYNQrIp/Z266eUq+WyZ5V96q96iF1Mot0KeIX1WF1S15Zs8mHOqh+UubAbObAsHo+R1xTvh9Vt1KmrKnkyxw4ZWqd8w5MlRGfU99Vb69IwlaQzzkwoI5686HMY840I/RV09Ey8jn729RzNdYfc3GkrMCSe5sioLaT5oAdNUQOAJtqrW8ZebWLVA5HqD2w3AeMmSujebSEvGkeeAI4CmwjtSQCV4BJYDonPgh8DOwud6Dp5LOIP0MaZvpZ7KWuAseBV4FRYCq37CHgGPBolmoLypp2YNU2dZ/6g9XL4Z2mKjRkKqPXczLX1HH1gTz5vJKiyXepJ6sQf99cOXSxjH5Vpm9GPWzaPdqAvxqTEEtCkOaCUqrMA8PABxFxcUEowog4D7wInM2t7yT1OqmFNm1PUdGvljaPqxfUP9U3TeNlTZg60c9NbfSYen/+4Z5MUeHkM3uhbla3mj98/+1Au3qHqUotoA04B7wHXMi2sVBkKXEpIn6PiLklrpmLiD8WJqgMHRExqx4HfiaVsJ3ABirHwY2kMXHd6l1oDDoAImJKHQW+I10a3VSS7wNeBh4D1jeT5KqR5d296onV5HwjseQbNsu7CeAw8CGlctVCLLs9iIjLEfEa6VXJJVroxGp6m5PAS8AEMNsYOsvDislHxCzps80R4BvgWhUxWQPpVRPZpbPL9GVkuuzAjqs7W82xLtR+0+Q/kxGfNzVh1efPtQa1Tz1o6kHG1CetMgE1Cg1/qWr6TnVb9vfviLjeaBsl/AswcLO5gs9JGQAAAABJRU5ErkJggg=="
local OS_ICON_VOICE = "iVBORw0KGgoAAAANSUhEUgAAAC0AAAAqCAYAAAAnH9IiAAAABHNCSVQICAgIfAhkiAAABEVJREFUWIXtmFuIlVUUx3/rOKOOlyHNTFNDpKSbpRIlRQkqFlZ0oZdAsBsEPRhF1lNUZJH1EvQQ0kvQS7eXbg+JZFFqJpVdDCUVL5RoiqZpXufXw/5O7jlzRp2Z78zxoT98sC9rr/3f+9t7rbUX/I8EtU1tV6MR+ktVqg4CLgNuBsYCy4AvI8Iy5ykN6kj1QXWNesyE79UxzeZWF+oE9UV1q3rSU9itzip7vpa+DC7O7OXA88Ac4Lw6+sf2ZY566BNp4CbgDeASYGCd/gBa+zhHF/SKtDoYeAh4rbc6+oIeTagOAC4GngIW9HR8WTjrSdU24HrgSWA2MLhMImoL6ZhdBOyKiPXdybZkgwYWgyYD7cCAGtnxwL3AlXX6ysBU4BlgBrBJfToivu6WtDoCmA/cRfr9Q4FKjWwbaTGNwhTgWmB08S1WH4uIH7tIqoPUl9RdaoflYp96f505u3hidbr6TcbhqPq+Oq5WtgLMBBYWq2tIrFBDbgHwnbpMvSLr+gl4FdhZ1FuBWcB99ZSsKHl3u91pdbLJtVvs6Fp1Ug2fR9VDmY6V6vRcpgJ0amgwjgB/AR2kv3o18IJ6fiazFMgv4DRgnslQAIl0Iy9XJ0TEduBNYEfRNJDkVW83+QAi4iTwHHCokGkjbeyEqp5aC9EfeJfkSavh6jhgHsk+AxARq4FV2ZipJHMMNIF0sZNvkS5elcMUUuCV46OsPB6YpLZWB/Q7ImI/8F7WNBGYVCO2Miu3AhdSeOGmkC7wRVYeDIwyvXyq2Av8ndVHAoOguaR/z8pBMgh5PHOCRLyKEZwDpEfU1P8Bjmf1CjAsqx8mLaSppK/JyieAfSQ7XsVQOr+E9lb7m0LaFIbOz5r+ALZFREfWNo1T0WQHsJtmkgbmAjdm9Q3AxhqZ27Lyn8B24Bgk0v2ak1CvAp4leTpIbv0rYHMmMxq4JRv2K7C5mj+pAPv7hW0i004iPK3aBKwHPoiIo5noImBUJvMzsKXaWQFW0H+7PRG4lPT4ENgGvBwRGyDF2ep1wCMkMyjp6HwWEQdz0q8Ae/qJ9CZSTLEd+A1YEhEfVwmTXPnrJMsB6eItp7MjArVVfVzdYufsUOnxdDHfcHVusaN5+wT1HfVIMfaEulqdUbvylog4ri4lnZk7SQnEdrpaliHAGAqv1FsUv3lZna6ZwA2Z/q3AEmBNF9KFosPqJ8C3pIhqSB3Sw4G7gXtoTAy+CzhAOscHSTH1p/Uyrv+lEIqQcSen3midoFaAdSQj/zApgCkTq4EnSLHzL8DnEXH89EPOEsWZXFic1x6f6TPoHmBKyDfG6alzTKnc013eHpE+W/R6RRGxHLgVWAscPYN4qejrb/gBeAD4kOSOayEp2Dn3UNjYxeqOmuOxR72j2fy6hXqBKdGyMTvnO9TJzeZ2WqjD1Nnq2+o6dZHFC7pMlJ67MyVdhpPeewci4nDZc/wLE5dmHzJCOVcAAAAASUVORK5CYII="
local OS_ICON_WEDGE_CLOSE = "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"
local OS_ICON_WEDGE_BACK = ""
local OS_ICON_BUBBLE_PROMPT_LEFT = ""
local OS_WEDGE_BACKGROUND = "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"
local OS_WEDGE_BORDER_COLOER = 0xF9B223

local function getHotspotExposureTrackLink(data, index)
    if (data == nil or index == nil) then
        return nil
    end
    local hotspotTrackLinkTable = data.hotspotTrackLink
    if (hotspotTrackLinkTable == nil) then
        return nil
    end
    local indexHotspotTrackLinkTable = hotspotTrackLinkTable[index]
    if (indexHotspotTrackLinkTable == nil) then
        return nil
    end
    return indexHotspotTrackLinkTable.exposureTrackLink
end

local function getHotspotClickTrackLink(data, index)
    if (data == nil or index == nil) then
        return nil
    end
    local hotspotTrackLinkTable = data.hotspotTrackLink
    if (hotspotTrackLinkTable == nil) then
        return nil
    end
    local indexHotspotTrackLinkTable = hotspotTrackLinkTable[index]
    if (indexHotspotTrackLinkTable == nil) then
        return nil
    end
    return indexHotspotTrackLinkTable.clickTrackLink
end

local function closeWedge()
    if (wedge.mediaPlayer ~= nil) then
        wedge.mediaPlayer:stopPlay()
    end
    if Native:getCacheData(wedge.id) == tostring(eventTypeShow) then
        Native:widgetEvent(eventTypeClose, wedge.id, adTypeName, actionTypePlayVideo, "")
        Native:deleteBatchCacheData({ wedge.id })
    end
    Native:destroyView()
end

local function wedgeConfig(data)
    if (data == nil) then
        wedge.videoDuration = 0
        wedge.closeAfter = 0
        wedge.isShowClose = false
        wedge.isShowAds = false
        wedge.needflush = false
        wedge.mediaPlayPaused = false
        return
    end
    local contentDataTable = data.data
    if (contentDataTable == nil) then
        wedge.videoDuration = 0
        wedge.closeAfter = 0
        wedge.isShowClose = false
        wedge.isShowAds = false
        wedge.needflush = false
        wedge.mediaPlayPaused = false
        return
    end
    wedge.videoDuration = contentDataTable.videoDuration
    wedge.videoDuration = 0
    wedge.isShowClose = contentDataTable.isShowClose
    wedge.isShowAds = contentDataTable.isShowAds
    if (contentDataTable.closeAfter ~= nil) then
        wedge.closeAfter = contentDataTable.closeAfter
    else
        wedge.closeAfter = -1
    end
    if (wedge.isShowClose) then
        if (wedge.isShowAds == true and wedge.closeAfter > 0) then
            wedge.timerType = 1
        elseif (wedge.isShowAds == false and wedge.closeAfter > 0) then
            wedge.timerType = 2
        else
            wedge.timerType = -1
        end
    else
        wedge.timerType = -1
    end
    wedge.needflush = false
    wedge.mediaPlayPaused = false

    --    wedge.isShowClose = true
    --    wedge.isShowAds = true
    --    wedge.isShowCountdown = false
    --    wedge.timerType = 1
    --    wedge.closeAfter = 10
end

local function wedgeID(data)
    if (data == nil) then
        return nil
    end
    return data.id
end

local function wedgeLinkUrl(data)
    if (data == nil) then
        return nil
    end
    local dataTable = data.data
    if (dataTable == nil) then
        return nil
    end
    local link = dataTable.linkUrl
    if (link ~= nil and string.match(tostring(link), "http") == "http") then
        return link
    else
        return nil
    end
end

local function getWedgeUrl(data)
    if (data == nil) then
        return nil
    end
    local contentDataTable = data.data
    if (contentDataTable == nil) then
        return nil
    end
    return contentDataTable.videoUrl
end

local function getVideoDuration(data)
    if (data == nil) then
        return 0
    end
    local contentDataTable = data.data
    if (contentDataTable == nil) then
        return 0
    end
    local _videoUrlTable = contentDataTable._videoUrl
    if (_videoUrlTable == nil) then
        return 0
    end
    local duration = _videoUrlTable.duration
    if (duration == nil) then
        return 0
    end
    return duration * 1000
end

--延时回调--
local function performWithDelay(callback, delay)
    if callback ~= nil and delay ~= nil then
        local timer = Timer()
        timer:interval(delay)
        timer:repeatCount(false)
        timer:delay(delay / 1000)
        timer:callback(callback)
        timer:start()
        return timer
    end
end

local function getLandscapeLocation(data) --获取竖屏位置
    if (data == nil) then
        return 0, 0, 0, 0
    end
    local contentDataTable = data.data
    if (contentDataTable == nil) then
        return 0, 0, 0, 0
    end
    if (wedge.landscapeWidth ~= nil and wedge.landscapeHeight ~= nil and wedge.landscapeX ~= nil and wedge.landscapeY ~= nil) then
        return wedge.landscapeX, wedge.landscapeY, wedge.landscapeWidth, wedge.landscapeHeight
    end
    local screenWidth, screenHeight = System.screenSize()
    local width = 0
    local height = 0
    local x = 0
    local y = 0
    local scaleWidth = contentDataTable.width
    if (scaleWidth ~= nil) then
        width = math.max(screenWidth, screenHeight) * scaleWidth
    end
    local ratio = contentDataTable.ratio
    if (ratio ~= nil) then
        height = math.min(screenWidth, screenHeight) * ratio
    end
    local scaleX = contentDataTable.positionX
    if (scaleX ~= nil) then
        x = math.max(screenWidth, screenHeight) * scaleX
    end
    local scaleY = contentDataTable.positionY
    if (scaleY ~= nil) then
        y = math.min(screenWidth, screenHeight) * scaleY
    end
    wedge.landscapeX = x
    wedge.landscapeY = y
    wedge.landscapeWidth = width
    wedge.landscapeHeight = height
    return wedge.landscapeX, wedge.landscapeY, wedge.landscapeWidth, wedge.landscapeHeight
end

local function getPortraitLocation(data) --获取竖屏位置
    if (data == nil) then
        return 0, 0, 0, 0
    end
    local contentDataTable = data.data
    if (contentDataTable == nil) then
        return 0, 0, 0, 0
    end
    if (wedge.portraitWidth ~= nil and wedge.portraitHeight ~= nil and wedge.portraitX ~= nil and wedge.portraitY ~= nil) then
        return wedge.portraitX, wedge.portraitY, wedge.portraitWidth, wedge.portraitHeight
    end
    local screenWidth, screenHeight = System.screenSize()
    local videoWidth, videoHight, originY = Native:getVideoSize(0)
    --忽略originY，已经设置luaview originY
    originY = 0
    local scaleW = math.min(screenWidth, screenHeight) / math.max(screenWidth, screenHeight)
    local scaleH = videoHight / math.min(screenWidth, screenHeight)
    local width = 0
    local height = 0
    local x = 0
    local y = 0
    local scaleWidth = contentDataTable.width
    if (scaleWidth ~= nil) then
        width = math.max(screenWidth, screenHeight) * scaleWidth * scaleW
    end
    local ratio = contentDataTable.ratio
    if (ratio ~= nil) then
        height = math.min(screenWidth, screenHeight) * ratio * scaleH
    end
    local scaleX = contentDataTable.positionX
    if (scaleX ~= nil) then
        x = math.max(screenWidth, screenHeight) * scaleX * scaleW
    end
    local scaleY = contentDataTable.positionY
    if (scaleY ~= nil) then
        y = math.min(screenWidth, screenHeight) * scaleY * scaleH
    end
    wedge.portraitX = x
    wedge.portraitY = y + originY
    wedge.portraitWidth = width
    wedge.portraitHeight = height
    return wedge.portraitX, wedge.portraitY, wedge.portraitWidth, wedge.portraitHeight
end

local function getLocation(data, isPortrait)
    if (isPortrait) then
        return getPortraitLocation(data)
    else
        return getLandscapeLocation(data)
    end
end

function getMediaPlayerLocation(data, isPortrait)
    local x = 44 * scale
    local y = 46 * scale
    local width = 1
    local height = 1
    local screenWidth, screenHeight = System.screenSize()
    local videoWidth, videoHight, originY = Native:getVideoSize(0)
    if isPortrait then
        local scaleW = math.min(screenWidth, screenHeight) / math.max(screenWidth, screenHeight)
        local scaleH = videoHight / math.min(screenWidth, screenHeight)
        height = math.min(screenWidth, screenHeight) * scaleH - y * 2
        width = height * 16.0 / 9.0;
        x = (math.max(screenWidth, screenHeight) * scaleW - width) * 0.5
    else
        height = math.min(screenWidth, screenHeight) - y * 2
        width = height * 16.0 / 9.0;
        x = (math.max(screenWidth, screenHeight) - width) * 0.5
    end
    return x, y, width, height
end

--延时回调设置
local function performWithRepeatCount(callback, repeatCount)
    if (repeatCount == nil or callback == nil) then
        return
    end
    local timer = Timer()
    timer:repeatCount(repeatCount)
    timer:delay(1)
    timer:callback(callback)
    timer:start()
    return timer
end

--情况三 播放器倒计时+广告标识+关闭按钮
local function setDownType3Size(downParentView, downView, downLabel, lineView, adLabel, downCloseView, downCloseImage, isPortrait)
    local downTop = 0
    local parentW = 0
    local parentH = 0
    local downW = 94 * scale
    local downH = 30 * scale
    local corner = 15 * scale
    if (isPortrait) then
        parentW = 138 * scale
        parentH = 42 * scale
        downTop = 12 * scale
    else
        parentW = 140 * scale
        parentH = 44 * scale
        downTop = 14 * scale
    end
    downParentView:frame(0, 0, parentW, parentH)
    downView:frame(0, downTop, downW, downH)
    -- downView:corner(corner, corner, 0, 0, 0, 0, corner, corner)
    downLabel:frame(6 * scale, 0, downH, downH)

    lineView:frame(39.3 * scale, 6.85 * scale, scale, 16.3 * scale)
    adLabel:frame(54 * scale, 0, 37 * scale, 30 * scale)

    downCloseView:frame(96 * scale, downTop, 30 * scale, 30 * scale)
    -- downCloseView:corner(0, 0, corner, corner, corner, corner, 0, 0)
    downCloseImage:frame(10 * scale, 10 * scale, 9.6 * scale, 9.6 * scale)

    downParentView:alignRight()
end

--情况四 播放器倒计时+关闭按钮
local function setDownType4Size(downParentView, downView, downLabel, downCloseView, downCloseImage, isPortrait)
    local downTop = 0
    local parentW = 0
    local parentH = 0
    local downW = 30 * scale
    local downH = 30 * scale
    local corner = 15 * scale
    if (isPortrait) then
        parentW = 74 * scale
        parentH = 42 * scale
        downTop = 12 * scale
    else
        parentW = 76 * scale
        parentH = 44 * scale
        downTop = 14 * scale
    end
    downParentView:frame(0, 0, parentW, parentH)
    downView:frame(0, downTop, downW, downH)
    -- downView:corner(corner, corner, 0, 0, 0, 0, corner, corner)
    downLabel:frame(0 * scale, 0, downH, downH)

    downCloseView:frame(32 * scale, downTop, 30 * scale, 30 * scale)
    -- downCloseView:corner(0, 0, corner, corner, corner, corner, 0, 0)
    downCloseImage:frame(10 * scale, 10 * scale, 9.6 * scale, 9.6 * scale)

    downParentView:alignRight()
end

--倒计时+关闭倒计时+关闭按钮切换状态
local function changeStatusType5(downParentView, downView, downLabel, lineView, adsLabel, downAdsLabel, line2View, downCloseView, downCloseImage, isPortrait)
    if (lineView ~= nil and lineView:isShow()) then
        lineView:hide()
    end
    if (downAdsLabel ~= nil and downAdsLabel:isShow()) then
        downAdsLabel:hide()
    end
    if (downCloseView ~= nil) then
        downCloseView:show()
    end
    setDownType4Size(downParentView, downView, downLabel, downCloseView, downCloseImage, isPortrait)
end

--倒计时+关闭倒计时+关闭按钮切换状态
local function changeStatusType6(downParentView, downView, downLabel, lineView, adsLabel, downAdsLabel, line2View, downCloseView, downCloseImage, isPortrait)
    if (downAdsLabel ~= nil and downAdsLabel:isShow()) then
        downAdsLabel:hide()
    end
    if (line2View ~= nil and line2View:isShow()) then
        line2View:hide()
    end
    if (downCloseView ~= nil) then
        downCloseView:show()
    end
    setDownType3Size(downParentView, downView, downLabel, lineView, adsLabel, downCloseView, downCloseImage, isPortrait)
end

local function performWithShutDownTimer(videoDuratimeTime) --根据关闭时间倒计时
    if (videoDuratimeTime == nil) then
        return
    end
    local repeatRerecordNum = 0 --记录重复次数
    local needChangeStatu = false
    wedge.timer = performWithRepeatCount(function()
        if (wedge.mediaPlayPaused) then
            return
        end
        repeatRerecordNum = repeatRerecordNum + 1
        wedge.countDownLabel:text(tostring(videoDuratimeTime - repeatRerecordNum))
        if (videoDuratimeTime - repeatRerecordNum <= 0) then --执行结束操作
            wedge.timer:cancel()
            return
        end
        if (wedge.timerType == -1) then
            return
        end
        if (wedge.closeAfter - repeatRerecordNum > 0 and wedge.countDownLabel ~= nil) then
            wedge.countDownAdsLabel:text(tostring(wedge.closeAfter - repeatRerecordNum) .. "s后可关闭广告")
        end
        if (wedge.closeAfter - repeatRerecordNum <= 0 and needChangeStatu == false) then --刷新情况 5，6
            if (wedge.timerType == 2) then
                changeStatusType5(wedge.countDownParentView, wedge.countDownView, wedge.countDownLabel, wedge.countDownLineView, wedge.downAdsLabel, wedge.countDownAdsLabel, wedge.countDownLine2View, wedge.countDownCloseView, wedge.countDownCloseImage, Native:isPortraitScreen())
            else
                changeStatusType6(wedge.countDownParentView, wedge.countDownView, wedge.countDownLabel, wedge.countDownLineView, wedge.downAdsLabel, wedge.countDownAdsLabel, wedge.countDownLine2View, wedge.countDownCloseView, wedge.countDownCloseImage, Native:isPortraitScreen())
            end
            needChangeStatu = true
        end
    end, videoDuratimeTime)
    if (videoDuratimeTime <= 0) then
        wedge.timer:cancel()
    end
    --设置视频倒计时 关闭倒计时默认值
    if (wedge.timerType ~= -1 and wedge.countDownAdsLabel ~= nil) then
        wedge.countDownAdsLabel:text(tostring(wedge.closeAfter) .. "s后可关闭广告")
    end
    wedge.countDownLabel:text(tostring(videoDuratimeTime))
end

local function setLuaViewSize(luaview, luaviewBack, isPortrait) --设置当前容器大小
    if (luaview == nil or luaviewBack == nil) then
        return
    end
    local screenWidth, screenHeight = System.screenSize()
    if (isPortrait) then
        local videoWidth, videoHight, y = Native:getVideoSize(0)
        if System.android() then
            y = 0.0
        end
        luaview:frame(0, y, math.min(screenWidth, screenHeight), videoHight)
        luaviewBack:frame(0, 0, math.min(screenWidth, screenHeight), videoHight)
        if System.android() then
            luaview:align(Align.TOP) --RIGHT
        end
    else
        luaview:frame(0, 0, math.max(screenWidth, screenHeight), math.min(screenWidth, screenHeight))
        luaviewBack:frame(0, 0, math.max(screenWidth, screenHeight), math.min(screenWidth, screenHeight))
        if System.android() then
            luaview:align(Align.RIGHT) --RIGHT
        end
    end
end

local function setBackViewSize(backView, isPortrait) --设置返回区域大小
    if (backView == nil) then
        return
    end
    local x, y, w, h = getLocation(wedge.data, isPortrait)
    if (isPortrait) then
        local scale13 = 13 * scale
        backView:xy(scale13, scale13 + y)
    else
        backView:xy(17 * scale, 14 * scale + y)
    end
end

--情况一 只显示播放器倒计时
local function setDownType1Size(downParentView, downView, downLabel, isPortrait)
    local downTop = 0
    local parentSize = 0
    local downSize = 30 * scale
    if (isPortrait) then
        parentSize = 42 * scale
        downTop = 12 * scale
    else
        parentSize = 44 * scale
        downTop = 14 * scale
    end
    downParentView:frame(0, 0, parentSize, parentSize)
    downView:frame(0, downTop, downSize, downSize)
    -- downView:corner(20 * scale, 20 * scale, 20 * scale, 20 * scale, 20 * scale, 20 * scale, 20 * scale, 20 * scale)
    downLabel:frame(0, 0, downSize, downSize)
    downParentView:alignRight()
end

--情况二 播放器倒计时+广告标识
local function setDownType2Size(downParentView, downView, downLabel, lineView, adLabel, isPortrait)
    local downTop = 0
    local parentW = 0
    local parentH = 0
    local downW = 94 * scale
    local downH = 30 * scale
    local corner = 15 * scale
    if (isPortrait) then
        parentW = 106 * scale
        parentH = 42 * scale
        downTop = 12 * scale
    else
        parentW = 108 * scale
        parentH = 44 * scale
        downTop = 14 * scale
    end
    downParentView:frame(0, 0, parentW, parentH)
    downView:frame(0, downTop, downW, downH)
    -- downView:corner(corner, corner, corner, corner, corner, corner, corner, corner)
    downLabel:frame(6 * scale, 0, downH, downH)

    lineView:frame(39.3 * scale, 6.85 * scale, scale, 16.3 * scale)
    adLabel:frame(54 * scale, 0, 37 * scale, 30 * scale)

    downParentView:alignRight()
end

--情况五 播放器倒计时+关闭倒计时+关闭按钮
local function setDownType5Size(downParentView, downView, downLabel, lineView, downAdsLabel, downCloseView, downCloseImage, isPortrait)
    if (downCloseView ~= nil and downCloseView:isShow()) then
        downCloseView:hide()
    end
    local downTop = 0
    local parentW = 0
    local parentH = 0
    local downW = 143 * scale
    local downH = 30 * scale
    local corner = 15 * scale
    if (isPortrait) then
        parentW = 155 * scale
        parentH = 42 * scale
        downTop = 12 * scale
    else
        parentW = 157 * scale
        parentH = 44 * scale
        downTop = 14 * scale
    end
    downParentView:frame(0, 0, parentW, parentH)
    downView:frame(0, downTop, downW, downH)
    -- downView:corner(corner, corner, 0, 0, 0, 0, corner, corner)
    downLabel:frame(6 * scale, 0, downH, downH)

    downLabel:frame(0, 0, 33.3 * scale, 30 * scale)

    lineView:frame(33.3 * scale, 6.85 * scale, scale, 16.3 * scale)

    downAdsLabel:frame(40.5 * scale, 0, 129 * scale, 30 * scale)

    downParentView:alignRight()
end

--情况六 播放器倒计时+广告标识+关闭倒计时+关闭按钮
local function setDownType6Size(downParentView, downView, downLabel, lineView, adsLabel, downAdsLabel, line2View, downCloseView, downCloseImage, isPortrait)
    if (downCloseView ~= nil and downCloseView:isShow()) then
        downCloseView:hide()
    end
    local downTop = 0
    local parentW = 0
    local parentH = 0
    local downW = 173 * scale
    local downH = 30 * scale
    local corner = 15 * scale
    if (isPortrait) then
        parentW = 185 * scale
        parentH = 42 * scale
        downTop = 12 * scale
    else
        parentW = 187 * scale
        parentH = 44 * scale
        downTop = 14 * scale
    end
    downParentView:frame(0, 0, parentW, parentH)
    downView:frame(0, downTop, downW, downH)
    -- downView:corner(corner, corner, 0, 0, 0, 0, corner, corner)

    downLabel:frame(0, 0, 33.3 * scale, 30 * scale)

    lineView:frame(33.3 * scale, 6.85 * scale, scale, 16.3 * scale)

    adsLabel:frame(40.5 * scale, 0, 30 * scale, 30 * scale)

    line2View:frame(70 * scale, 6.85 * scale, scale, 16.3 * scale)

    downAdsLabel:frame(77 * scale, 0, 150 * scale, 30 * scale)

    downParentView:alignRight()
end

--设置右边布局大小
local function setCountDownViewSize(downParentView, downView, downLabel, lineView, adsLabel, downAdsLabel, line2View, downCloseView, downCloseImage, isPortrait) --设置倒计时区域大小
    if (downParentView == nil or downView == nil) then
        return
    end
    if (not wedge.isShowClose and not wedge.isShowAds) then --只显示播放器倒计时
        setDownSize(downParentView, downView, downLabel, isPortrait)
        return
    end
    if (not wedge.isShowClose and wedge.isShowAds) then --播放器倒计时+广告标识
        setDownWithAdsSize(downParentView, downView, downLabel, lineView, adsLabel, isPortrait)
        return
    end
    if (wedge.isShowClose and wedge.isShowAds and wedge.closeAfter <= 0) then --播放器倒计时+广告标识+关闭按钮
        setDownWithAdsAndCloseSize(downParentView, downView, downLabel, lineView, adsLabel, downCloseView, downCloseImage, isPortrait)
        return
    end
    if (wedge.isShowClose and wedge.isShowAds and wedge.closeAfter > 0) then --播放器倒计时+广告标识+关闭倒计时+关闭按钮
        setDownWithAdsAndCloseSize(downParentView, downView, downLabel, lineView, adsLabel, downCloseView, downCloseImage, isPortrait)
        return
    end
end

local function setGuideViewSize(guideParentView, guideView, guideImage, guideLabel, guideVoiceView, guideVoiceImage, data, isPortrait) --设置底部详情大小
    if (guideParentView == nil or guideView == nil) then
        return
    end
    guideParentView:frame(0, 0, 62 * scale, 43 * scale)
    guideView:frame(0, 0, 30 * scale, 30 * scale)
    -- guideView:corner(20 * scale, 20 * scale, 20 * scale, 20 * scale, 20 * scale, 20 * scale, 20 * scale, 20 * scale)
    guideImage:frame(6.2 * scale, 0 * scale, 17.6 * scale, 17 * scale)
    guideImage:align(Align.V_CENTER)


    if System.android() then
        guideParentView:alignRightBottom()
    else
        guideParentView:alignRight()
        guideParentView:alignBottom()
    end
    local linkUrl = wedgeLinkUrl(data)
    if (linkUrl == nil) then
        guideVoiceView:frame(17 * scale, 0, 30 * scale, 30 * scale)
        -- guideVoiceView:corner(15 * scale, 15 * scale, 15 * scale, 15 * scale, 15 * scale, 15 * scale, 15 * scale, 15 * scale)
        guideVoiceImage:frame(0, 0, 10 * scale, 10 * scale)
        guideVoiceImage:align(Align.CENTER)
        guideView:hide()
        guideVoiceView:show()
        if (isPortrait) then
            guideParentView:show()
        else
            guideParentView:show()
        end
        return
    end
    local alpha = Animation():alpha(0.5):duration(0.25):reverses(true):repeatCount(4)
    alpha:with(guideImage):callback({
        onEnd = function()
            guideImage:alpha(1)
        end
    }):start()
    performWithDelay(function()
        guideParentView:frame(0, 0, 162 * scale, 43 * scale)
        guideView:frame(0, 0, 115 * scale, 30 * scale)
        -- guideView:corner(15 * scale, 15 * scale, 0, 0, 0, 0, 15 * scale, 15 * scale)
        guideLabel:frame(40 * scale, 0, 115 * scale, 30 * scale)

        guideImage:frame(88 * scale, 0 * scale, 17.6 * scale, 17 * scale)
        guideImage:align(Align.V_CENTER)

        guideVoiceView:frame(117 * scale, 0, 30 * scale, 30 * scale)
        -- guideVoiceView:corner(0, 0, 15 * scale, 15 * scale, 15 * scale, 15 * scale, 0, 0)
        guideVoiceImage:frame(0, 0, 10 * scale, 10 * scale)
        guideVoiceImage:align(Align.CENTER)

        if System.android() then
            guideParentView:alignRightBottom()
        else
            guideParentView:alignRight()
            guideParentView:alignBottom()
        end
        local translation = Animation():translation(-75 * scale, 0):duration(0.5)
        translation:with(guideImage):callback({
            onStart = function()
            end,
            onCancel = function()
            end,
            onEnd = function()
                guideLabel:show()
                guideVoiceView:show()
            end,
            onPause = function()
            end,
            onResume = function()
            end,
        }):start()
    end, 2000)
    --    if (isPortrait) then
    --        guideParentView:show()
    --    else
    --        guideParentView:show()
    --    end
end

--屏幕旋转--  TODO
local function rotationScreen(isPortrait)
    if (wedge.mediaPlayer == nil or wedge.data == nil) then
        return
    end
    local x, y, w, h
    if (isPortrait) then
        x, y, w, h = getPortraitLocation(wedge.data)
        --        wedge.guideParentView:show()
    else
        x, y, w, h = getLandscapeLocation(wedge.data)
        --        wedge.guideParentView:show()
    end
    setLuaViewSize(wedge.luaView, wedge.luaViewBack, isPortrait)
    setBackViewSize(wedge.backView, isPortrait)
    x, y, w, h = getMediaPlayerLocation(wedge.data, isPortrait)
    wedge.mediaPlayer:frame(x, y, w, h)
end

local function registerMedia()
    local media = Media()
    -- body
    -- 注册window callback通知
    local callbackTable = {
        --0: 竖屏小屏幕，1 竖屏全凭，2 横屏全屏
        onPlayerSize = function(type)
            if (type == 0) then
                rotationScreen(true)
            elseif (type == 1) then
                rotationScreen(true)
            elseif (type == 2) then
                rotationScreen(false)
            end
            if System.ios() then
                wedge.guideParentView:alignRight()
                wedge.guideParentView:alignBottom()
                wedge.countDownParentView:alignRight()
            end
        end
    }
    media:mediaCallback(callbackTable)
    return media
end

local function registerWindow()
    local nativeWindow = nil
    if System.ios() then
        nativeWindow = NativeWindow()
    else
        nativeWindow = nativeWindow
    end
    local callbackTable = {
        onShow = function()
            wedge.mediaPlayPaused = false
            if (wedge.mediaPlayer ~= nil) then
                wedge.mediaPlayer:restartPlay()
            end
        end,
        onHide = function()
            wedge.mediaPlayPaused = true
            if (wedge.mediaPlayer ~= nil) then
                wedge.mediaPlayer:pausePlay()
            end
        end,
        onHome = function()
            if (wedge.mediaPlayer ~= nil) then
                wedge.mediaPlayer:pausePlay()
            end
        end,
        onLayout = function()
            if (wedge.luaView == nil) then
                return
            end
            if (Native:isPortraitScreen() == true) then
                return
            end
            local hWidth = nativeWindow:width()
            local screenWidth, screenHeight = System.screenSize()
            if (hWidth <= math.max(screenWidth, screenHeight)) then
                return
            end
            wedge.luaView:frame(0, 0, hWidth, math.min(screenWidth, screenHeight))
            wedge.luaView:align(Align.RIGHT) --RIGHT
            local x, y, w, h = getMediaPlayerLocation(wedge.data, isPortrait)
            wedge.mediaPlayer:frame(x, y, w, h)
        end
    }
    if (nativeWindow == nil and System.android()) then
        nativeWindow = window
    end
    if (nativeWindow == nil) then
        return
    end
    nativeWindow:callback(callbackTable)
    return nativeWindow
end

local function createParent(isPortrait)
    local luaView
    if System.android() then
        luaView = View()
    else
        luaView = ThroughView()
    end

    local luaViewBack = Image(Native)
    luaViewBack:image(Data(OS_WEDGE_BACKGROUND))
    luaViewBack:scaleType(ScaleType.FIT_XY)
    luaView:addView(luaViewBack)
    setLuaViewSize(luaView, luaViewBack, isPortrait)
    return luaView, luaViewBack
end

local function createMediaPlay(data, isPortrait)
    local mediaPlayer = MediaPlayer()
    mediaPlayer:clipsToBounds(true)
    mediaPlayer:cornerRadius(5 * scale)
    local x, y, w, h = getMediaPlayerLocation(data, isPortrait)
    mediaPlayer:frame(x, y, w, h)
    if System.ios() then
        mediaPlayer:show()
    else
        mediaPlayer:backgroundColor(0x000000)
    end
    return mediaPlayer
end

local function createBack(data, isPortrait)
    local backView = Image(Native)
    backView:size(30 * scale, 30 * scale)
    backView:image(Data(OS_ICON_WEDGE_BACK))
    backView:clipsToBounds(true)
    backView:cornerRadius(15 * scale)
    backView:borderColor(OS_WEDGE_BORDER_COLOER)
    backView:borderWidth(1)
    setBackViewSize(backView, isPortrait)
    return backView
end

--播放器倒计时必显示 “Ns后可关闭”显示前提为“关闭”按钮为开启状态
--1.只显示播放器倒计时
--2.播放器倒计时+“广告”标识
--3.播放器倒计时+“广告”标识+“关闭”按钮
--4.播放器倒计时+“关闭”按钮
--5.播放器倒计时+“Ns后可关闭”+“关闭”按钮
--6.播放器倒计时+“广告”标识+“Ns后可关闭”+“关闭”按钮
local function createVideoDownView(data, isPortrait)
    local downParentView = View()
    downParentView:align(Align.RIGHT) --RIGHT

    local downView = View()
    downView:backgroundColor(0x000000, 0.6) --播放器倒计时

    downView:clipsToBounds(true)
    downView:cornerRadius(15 * scale)
    downView:borderColor(OS_WEDGE_BORDER_COLOER)
    downView:borderWidth(1)

    local downLabel = Label()
    downLabel:textSize(16)
    downLabel:textColor(0xffffff)
    downLabel:textAlign(TextAlign.CENTER) --播放器倒计时文本
    --1.只显示播放器倒计时
    if (not wedge.isShowClose and not wedge.isShowAds) then --1.只显示播放器倒计时
        setDownType1Size(downParentView, downView, downLabel, isPortrait)

        downView:addView(downLabel)
        downParentView:addView(downView)

        return downParentView, downView, downLabel, nil, nil, nil, nil, nil, nil
    end
    --2.播放器倒计时+“广告”标识
    if (not wedge.isShowClose and wedge.isShowAds) then --播放器倒计时+广告标识
        local lineView = View()
        lineView:backgroundColor(0xffffff) --分隔符

        local adsLabel = Label()
        adsLabel:textSize(12)
        adsLabel:textColor(0xffffff)
        adsLabel:text("广告")
        adsLabel:textAlign(TextAlign.V_CENTER) --广告标识

        setDownType2Size(downParentView, downView, downLabel, lineView, adsLabel, isPortrait)

        downView:addView(downLabel)
        downView:addView(lineView)
        downView:addView(adsLabel)
        downParentView:addView(downView)

        return downParentView, downView, downLabel, lineView, adsLabel, nil, nil, nil, nil
    end
    --3.播放器倒计时+“广告”标识+“关闭”按钮
    if (wedge.isShowClose and wedge.isShowAds and wedge.closeAfter <= 0) then --播放器倒计时+广告标识+关闭按钮
        local lineView = View()
        lineView:backgroundColor(0xffffff) --分隔符

        local adsLabel = Label()
        adsLabel:textSize(12)
        adsLabel:textColor(0xffffff)
        adsLabel:text("广告")
        adsLabel:textAlign(TextAlign.V_CENTER) --广告标识

        local downCloseView = View()
        downCloseView:backgroundColor(0x000000, 0.6) --关闭按钮父控件

        downCloseView:clipsToBounds(true)
        downCloseView:cornerRadius(15 * scale)
        downCloseView:borderColor(OS_WEDGE_BORDER_COLOER)
        downCloseView:borderWidth(1)

        local downCloseImage = Image(Native) --关闭按钮显示图片
        downCloseImage:image(Data(OS_ICON_WEDGE_CLOSE))

        setDownType3Size(downParentView, downView, downLabel, lineView, adsLabel, downCloseView, downCloseImage, isPortrait)

        downView:addView(downLabel)
        downView:addView(lineView)
        downView:addView(adsLabel)

        downCloseView:addView(downCloseImage)

        downParentView:addView(downView)
        downParentView:addView(downCloseView)
        return downParentView, downView, downLabel, lineView, adsLabel, nil, nil, downCloseView, downCloseImage
    end
    --4.播放器倒计时+“关闭”按钮
    if (wedge.isShowClose and not wedge.isShowAds and wedge.closeAfter <= 0) then
        local downCloseView = View()
        downCloseView:backgroundColor(0x000000, 0.6) --关闭按钮父控件

        downCloseView:clipsToBounds(true)
        downCloseView:cornerRadius(15 * scale)
        downCloseView:borderColor(OS_WEDGE_BORDER_COLOER)
        downCloseView:borderWidth(1)

        local downCloseImage = Image(Native) --关闭按钮显示图片
        downCloseImage:image(Data(OS_ICON_WEDGE_CLOSE))

        setDownType4Size(downParentView, downView, downLabel, downCloseView, downCloseImage, isPortrait)

        downView:addView(downLabel)
        downCloseView:addView(downCloseImage)

        downParentView:addView(downView)
        downParentView:addView(downCloseView)
        return downParentView, downView, downLabel, nil, nil, nil, nil, downCloseView, downCloseImage
    end
    --5.播放器倒计时+“Ns后可关闭”+“关闭”按钮
    if (wedge.isShowClose and not wedge.isShowAds and wedge.closeAfter > 0) then
        local lineView = View()
        lineView:backgroundColor(0xffffff) --分隔符

        local downAdsLabel = Label()
        downAdsLabel:textSize(12)
        downAdsLabel:textColor(0xffffff)
        downAdsLabel:textAlign(TextAlign.V_CENTER) --可关闭倒计时

        local downCloseView = View()
        downCloseView:backgroundColor(0x000000, 0.6) --关闭按钮父控件

        downCloseView:clipsToBounds(true)
        downCloseView:cornerRadius(15 * scale)
        downCloseView:borderColor(OS_WEDGE_BORDER_COLOER)
        downCloseView:borderWidth(1)

        local downCloseImage = Image(Native) --关闭按钮显示图片
        downCloseImage:image(Data(OS_ICON_WEDGE_CLOSE))

        setDownType5Size(downParentView, downView, downLabel, lineView, downAdsLabel, downCloseView, downCloseImage, isPortrait)

        downView:addView(downLabel)
        downView:addView(lineView)
        downView:addView(downAdsLabel)
        downCloseView:addView(downCloseImage)

        downParentView:addView(downView)
        downParentView:addView(downCloseView)
        --TODO
        return downParentView, downView, downLabel, lineView, nil, downAdsLabel, nil, downCloseView, downCloseImage
    end
    --6.播放器倒计时+“广告”标识+“Ns后可关闭”+“关闭”按钮
    if (wedge.isShowClose and wedge.isShowAds and wedge.closeAfter > 0) then
        local lineView = View()
        lineView:backgroundColor(0xffffff) --分隔符

        local adsLabel = Label()
        adsLabel:textSize(12)
        adsLabel:textColor(0xffffff)
        adsLabel:text("广告")
        adsLabel:textAlign(TextAlign.V_CENTER) --广告标识

        local line2View = View()
        line2View:backgroundColor(0xffffff) --分隔符

        local downAdsLabel = Label()
        downAdsLabel:textSize(12)
        downAdsLabel:textColor(0xffffff)
        downAdsLabel:textAlign(TextAlign.V_CENTER) --可关闭倒计时

        local downCloseView = View()
        downCloseView:backgroundColor(0x000000, 0.6) --关闭按钮父控件

        downCloseView:clipsToBounds(true)
        downCloseView:cornerRadius(15 * scale)
        downCloseView:borderColor(OS_WEDGE_BORDER_COLOER)
        downCloseView:borderWidth(1)

        local downCloseImage = Image(Native) --关闭按钮显示图片
        downCloseImage:image(Data(OS_ICON_WEDGE_CLOSE))

        setDownType6Size(downParentView, downView, downLabel, lineView, adsLabel, downAdsLabel, line2View, downCloseView, downCloseImage, isPortrait)
        downView:addView(downLabel)
        downView:addView(lineView)
        downView:addView(adsLabel)
        downView:addView(line2View)
        downView:addView(downAdsLabel)
        downCloseView:addView(downCloseImage)

        downParentView:addView(downView)
        downParentView:addView(downCloseView)
        --TODO
        return downParentView, downView, downLabel, lineView, adsLabel, downAdsLabel, line2View, downCloseView, downCloseImage
    end
end

local function createGuide(data, isPortrait)
    local guideParentView = View()

    local guideView = View()
    guideView:backgroundColor(0x000000, 0.6)

    guideView:clipsToBounds(true)
    guideView:cornerRadius(15 * scale)
    guideView:borderColor(OS_WEDGE_BORDER_COLOER)
    guideView:borderWidth(1)

    local guideImage = Image(Native)
    guideImage:image(Data(OS_ICON_BUBBLE_PROMPT_LEFT))
    guideImage:scaleType(ScaleType.FIT_XY)

    local guideLabel = Label()
    guideLabel:textColor(0xffffff)
    guideLabel:textSize(12)
    guideLabel:text("点击看详情")
    guideLabel:textAlign(TextAlign.V_CENTER)
    guideLabel:hide()

    local guideVoiceView = View()
    guideVoiceView:backgroundColor(0x000000, 0.6)

    guideVoiceView:clipsToBounds(true)
    guideVoiceView:cornerRadius(15 * scale)
    guideVoiceView:borderColor(OS_WEDGE_BORDER_COLOER)
    guideVoiceView:borderWidth(1)

    guideVoiceView:hide()

    local guideVoiceImage = Image(Native)
    guideVoiceImage:image(Data(OS_ICON_VOICE))
    guideVoiceImage:scaleType(ScaleType.CENTER_CROP)

    guideView:addView(guideImage)
    guideView:addView(guideLabel)
    guideVoiceView:addView(guideVoiceImage)

    setGuideViewSize(guideParentView, guideView, guideImage, guideLabel, guideVoiceView, guideVoiceImage, data, isPortrait)

    guideParentView:addView(guideView)
    guideParentView:addView(guideVoiceView)

    return guideParentView, guideView, guideImage, guideLabel, guideVoiceView, guideVoiceImage
end

local function showControl(isPortrait, visible)
    if (isPortrait and visible) then
        wedge.backView:show()
        wedge.countDownParentView:show()
        --        wedge.guideParentView:hide()
        return
    end
    if (isPortrait and not visible) then
        wedge.backView:hide()
        wedge.countDownParentView:hide()
        --        wedge.guideParentView:hide()
        return
    end
    if (not isPortrait and visible) then
        wedge.backView:show()
        wedge.countDownParentView:show()
        --        wedge.guideParentView:show()
    end
    if (not isPortrait and not visible) then
        wedge.backView:hide()
        wedge.countDownParentView:hide()
        --        wedge.guideParentView:hide()
    end
    if System.ios() then
        wedge.guideParentView:alignRight()
        wedge.guideParentView:alignBottom()
    end
end

function createLoadingView()
    local loading = LoadingIndicator()
    loading:frame(0, 0, 40, 40)
    loading:color(0xffffff)
    loading:start()
    return loading;
end

local function onCreate(data)
    local showLinkUrl = getHotspotExposureTrackLink(data, 1)
    if (showLinkUrl ~= nil) then
        Native:get(showLinkUrl)
    end
    if (wedge.launchPlanId ~= nil) then
        osTrack(wedge.launchPlanId, 1, 2)
        if (wedgeLinkUrl(data) ~= nil) then
            osTrack(wedge.launchPlanId, 2, 2)
        end
    end
    wedge.luaView, wedge.luaViewBack = createParent(Native:isPortraitScreen())
    wedge.mediaPlayer = createMediaPlay(data, Native:isPortraitScreen())
    wedge.backView = createBack(data, Native:isPortraitScreen())
    wedge.countDownParentView, wedge.countDownView, wedge.countDownLabel, wedge.countDownLineView, wedge.downAdsLabel, wedge.countDownAdsLabel, wedge.countDownLine2View, wedge.countDownCloseView, wedge.countDownCloseImage = createVideoDownView(data, Native:isPortraitScreen())
    wedge.guideParentView, wedge.guideView, wedge.guideImageView, wedge.guideLabelView, wedge.guideVoiceView, wedge.guideVoiceImage = createGuide(data, Native:isPortraitScreen())
    wedge.loading = createLoadingView()
    showControl(Native:isPortraitScreen(), false)
    wedge.luaView:addView(wedge.mediaPlayer)
    wedge.luaView:addView(wedge.backView)
    wedge.luaView:addView(wedge.countDownParentView)
    wedge.countDownParentView:alignRight()
    wedge.luaView:addView(wedge.guideParentView)
    wedge.luaView:addView(wedge.loading)
    wedge.loading:alignCenter()
    if System.ios() then
        wedge.guideParentView:alignRight()
        wedge.guideParentView:alignBottom()
    end
    wedge.countDownParentView:onClick(function()
    end)
    wedge.backView:onClick(function()
        Native:widgetEvent(eventTypeBack, wedge.id, adTypeName, actionTypeNone, "")
    end)
    local clickFunction = function()
        local linkUrl = wedgeLinkUrl(wedge.data)
        if (linkUrl == nil) then
            return
        end
        local clickLinkUrl = getHotspotClickTrackLink(wedge.data, 1)
        if (clickLinkUrl ~= nil) then
            Native:get(clickLinkUrl)
        end
        if (wedge.launchPlanId ~= nil) then
            osTrack(wedge.launchPlanId, 3, 2)
        end
        local adId = wedgeID(wedge.data)
        local adType = "os_wedge.lua"
        local linkTable = { link = linkUrl, adType = adType, adId = adId }
        Native:widgetEvent(eventTypeClick, wedge.id, adTypeName, actionTypeOpenUrl, linkUrl)
        if (wedge.mediaPlayer ~= nil) then
            wedge.mediaPlayer:pausePlay()
            wedge.mediaPlayPaused = true
        end
    end
    wedge.guideParentView:onClick(clickFunction)
    if (wedge.countDownCloseView ~= nil) then
        wedge.countDownCloseView:onClick(function()
            closeWedge()
        end)
    end
    wedge.guideVoiceView:onClick(function()
        local voice = wedge.mediaPlayer:voice()
        if (voice == 0 and wedge.voice == 0) then
            wedge.guideVoiceImage:image(Data(OS_ICON_NO_VOICE))
        elseif (voice > 0 and wedge.voice > 0) then
            wedge.mediaPlayer:voice(0)
            wedge.guideVoiceImage:image(Data(OS_ICON_NO_VOICE))
        else
            wedge.mediaPlayer:voice(wedge.voice)
            wedge.guideVoiceImage:image(Data(OS_ICON_VOICE))
        end
    end)
    if System.ios() then
        wedge.mediaPlayer:onClick(clickFunction)
    else
        wedge.luaView:onClick(clickFunction)
    end
end

local function setDefaultValue(data) --设置默认大小值
    if (data == nil) then
    end
    data.data.width = 1.0
    data.data.ratio = 1.0
    data.data.positionY = 0.0
    data.data.positionX = 0.0
end

--入口Native调用--
function show(args)
    if (args == nil) then
        if (wedge.mediaPlayer ~= nil) then
            wedge.mediaPlayer:restartPlay()
            wedge.mediaPlayPaused = false
        end
        return
    end
    local dataTable = args.data
    if (dataTable == nil) then
        if (wedge.mediaPlayer ~= nil) then
            wedge.mediaPlayer:restartPlay()
            wedge.mediaPlayPaused = false
        end
        return
    else
        local wedgeUrl = getWedgeUrl(dataTable)
        if wedgeUrl == nil then
            return
        end
    end
    setDefaultValue(dataTable)
    wedgeConfig(dataTable)
    wedge.id = dataTable.id
    wedge.launchPlanId = dataTable.launchPlanId

    Native:widgetEvent(eventTypeShow, wedge.id, adTypeName, actionTypePauseVideo, "")
    Native:saveCacheData(wedge.id, tostring(eventTypeShow))
    wedge.data = dataTable
    wedge.media = registerMedia()
    wedge.window = registerWindow()
    onCreate(dataTable)
    wedge.mediaPlayer:callback({
        onStart = function(url)
            --开始播放
            wedge.voice = wedge.mediaPlayer:voice()
            if (wedge.voice > 0) then
                wedge.guideVoiceImage:image(Data(OS_ICON_VOICE))
            else
                wedge.guideVoiceImage:image(Data(OS_ICON_NO_VOICE))
            end
            wedge.mediaPlayPaused = false
            local videoDuration = getVideoDuration(dataTable)
            local currentPosition = 0
            if (videoDuration == 0) then
                currentPosition = rounded((wedge.mediaPlayer:duration() - wedge.mediaPlayer:position()) / 1000)
            else
                currentPosition = rounded((videoDuration - wedge.mediaPlayer:position()) / 1000)
            end
            wedge.videoDuration = currentPosition
            if wedge.timer == nil then
                performWithShutDownTimer(currentPosition)
            end
            showControl(Native:isPortraitScreen(), true)
            if wedge.loading ~= nil then
                wedge.loading:stop()
                wedge.loading:removeFromParent()
                wedge.loading = nil
            end
        end,
        onPause = function(url)
            wedge.mediaPlayPaused = true
            --暂停播放
        end,
        onFinished = function(url)
            --停止播放
            closeWedge()
        end,
        onPrepare = function(url)
            --准备播放
            if System.ios() then
                wedge.mediaPlayer:show()
            end
        end,
        onError = function(url)
            --播放错误
            closeWedge()
        end,
        onChangeVolume = function(volme)
            wedge.voice = volme
            if (wedge.guideVoiceImage == nil or wedge.mediaPlayer == nil) then
                return
            end
            if (volme > 0) then
                wedge.guideVoiceImage:image(Data(OS_ICON_VOICE))
            else
                wedge.guideVoiceImage:image(Data(OS_ICON_NO_VOICE))
            end
        end
    })
    wedge.mediaPlayer:startPlay(getWedgeUrl(dataTable))
end
